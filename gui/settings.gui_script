local CO = require "main.constants"
local MO = require "monarch.monarch"
local GO = require "gooey.gooey"
local MA = require "main.match"

local function formatText(label, value)
	return label .. "  " .. value
end

local function cycleSwapEveryValue(value)
	return (value + 20) % 120
end

local function cycleMarathonValue(value)
	return not value
end

local function getBooleanTextValue(value)
	local text
	if(value) then
		text = "ON"
	else 
		text = "OFF"
	end
	return text
end

function init(self)
	GO.acquire_input()
	msg.post(".", "acquire_input_focus")

	local text = gui.get_node(CO.GUI_SWAPEVERY .. "_text")
	gui.set_text(text, formatText("SWAP EVERY", MA.getSwapEvery()))
	text = gui.get_node(CO.GUI_MARATHON .. "_text")
	gui.set_text(text, formatText("MARATHON", getBooleanTextValue(MA.isMarathon())))
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end


function on_input(self, action_id, action)
	local group = GO.group("group1", function()
		GO.button(CO.GUI_BACK, action_id, action, function(button)
			MO.show(hash(CO.SCREEN_MAINMENU))
		end)
		GO.button(CO.GUI_SWAPEVERY, action_id, action, function(button)
			local newValue = cycleSwapEveryValue(MA.getSwapEvery())
			MA.setSwapEvery(newValue)
			
			local text = gui.get_node(CO.GUI_SWAPEVERY .. "_text")
			gui.set_text(text, formatText("SWAP EVERY", MA.getSwapEvery()))
		end)
		GO.button(CO.GUI_MARATHON, action_id, action, function(button)
			local newValue = cycleMarathonValue(MA.isMarathon())
			MA.setMarathon(newValue)
			
			local text = gui.get_node(CO.GUI_MARATHON .. "_text")
			gui.set_text(text, formatText("MARATHON", getBooleanTextValue(MA.isMarathon())))
				end)
	end)
	return group.consumed
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
